%!PS-Adobe-2.0 EPSF-2.0
%%Title: responseTime.eps
%%Creator: gnuplot 4.6 patchlevel 6
%%CreationDate: Mon Dec 15 05:14:14 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 7.500 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (responseTime.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 6)
  /Author (bandwitch)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Dec 15 05:14:14 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-NewRoman) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
0.500 UL
LTb
LCb setrgbcolor
602 448 M
63 0 V
6282 0 R
-63 0 V
stroke
518 448 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
0.500 UL
LTb
LCb setrgbcolor
602 1282 M
63 0 V
6282 0 R
-63 0 V
stroke
518 1282 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
0.500 UL
LTb
LCb setrgbcolor
602 2116 M
63 0 V
6282 0 R
-63 0 V
stroke
518 2116 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
0.500 UL
LTb
LCb setrgbcolor
602 2951 M
63 0 V
6282 0 R
-63 0 V
stroke
518 2951 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 30)]
] -46.7 MRshow
0.500 UL
LTb
LCb setrgbcolor
602 3785 M
63 0 V
6282 0 R
-63 0 V
stroke
518 3785 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 40)]
] -46.7 MRshow
0.500 UL
LTb
LCb setrgbcolor
602 4619 M
63 0 V
6282 0 R
-63 0 V
stroke
518 4619 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 50)]
] -46.7 MRshow
0.500 UL
LTb
LCb setrgbcolor
602 448 M
0 63 V
0 4108 R
0 -63 V
stroke
602 308 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
0.500 UL
LTb
LCb setrgbcolor
1235 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1235 308 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
0.500 UL
LTb
LCb setrgbcolor
1868 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1868 308 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
0.500 UL
LTb
LCb setrgbcolor
2501 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2501 308 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 60)]
] -46.7 MCshow
0.500 UL
LTb
LCb setrgbcolor
3134 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3134 308 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 80)]
] -46.7 MCshow
0.500 UL
LTb
LCb setrgbcolor
3767 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3767 308 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
0.500 UL
LTb
LCb setrgbcolor
4400 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4400 308 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 120)]
] -46.7 MCshow
0.500 UL
LTb
LCb setrgbcolor
5032 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5032 308 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 140)]
] -46.7 MCshow
0.500 UL
LTb
LCb setrgbcolor
5665 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5665 308 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 160)]
] -46.7 MCshow
0.500 UL
LTb
LCb setrgbcolor
6298 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6298 308 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 180)]
] -46.7 MCshow
0.500 UL
LTb
LCb setrgbcolor
6931 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6931 308 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
602 4619 N
602 448 L
6345 0 V
0 4171 V
-6345 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-NewRoman) 140.0 0.0 true true 0 (Response time \(ms\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3774 98 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 (Clients)]
] -46.7 MCshow
LTb
3774 4829 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 (Increasing Number of Clients: 1 Client Instance, 1 MW \(20 connections, 20 threads\))]
] -46.7 MCshow
1.000 UP
0.500 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UP
1.000 UL
LT0
1.00 0.00 0.00 C LCb setrgbcolor
6296 4486 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 (Response time for LIST_QUEUES, SEND_MESSAGE and RECEIVE_MESSAGE)]
] -46.7 MRshow
LT0
1.00 0.00 0.00 C 6380 4486 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
602 448 M
63 117 V
95 51 V
918 717 L
159 79 V
158 114 V
158 57 V
158 76 V
159 91 V
158 68 V
158 93 V
158 72 V
317 196 V
316 133 V
317 166 V
316 151 V
317 152 V
633 389 V
632 287 V
633 274 V
633 295 V
633 326 V
602 448 M
31 0 V
-31 0 R
31 0 V
32 42 R
0 149 V
634 490 M
62 0 V
634 639 M
62 0 V
760 475 M
0 282 V
729 475 M
62 0 V
729 757 M
62 0 V
918 520 M
0 394 V
887 520 M
62 0 V
887 914 M
62 0 V
1077 507 M
0 578 V
1046 507 M
62 0 V
-62 578 R
62 0 V
1235 515 M
0 790 V
1204 515 M
62 0 V
-62 790 R
62 0 V
1393 559 M
0 816 V
1362 559 M
62 0 V
-62 816 R
62 0 V
1551 624 M
0 838 V
1520 624 M
62 0 V
-62 838 R
62 0 V
1710 749 M
0 770 V
1679 749 M
62 0 V
-62 770 R
62 0 V
1868 831 M
0 742 V
1837 831 M
62 0 V
-62 742 R
62 0 V
2026 919 M
0 752 V
1995 919 M
62 0 V
-62 752 R
62 0 V
2184 997 M
0 741 V
2153 997 M
62 0 V
-62 741 R
62 0 V
286 -555 R
0 759 V
-31 -759 R
62 0 V
-62 759 R
62 0 V
285 -620 R
0 749 V
-31 -749 R
62 0 V
-62 749 R
62 0 V
286 -602 R
0 786 V
-31 -786 R
62 0 V
stroke 3165 1469 M
-62 786 R
62 0 V
285 -652 R
0 820 V
-31 -820 R
62 0 V
-62 820 R
62 0 V
286 -636 R
0 756 V
-31 -756 R
62 0 V
-62 756 R
62 0 V
602 -586 R
0 1193 V
4369 1957 M
62 0 V
-62 1193 R
62 0 V
601 -731 R
0 844 V
-31 -844 R
62 0 V
-62 844 R
62 0 V
602 -585 R
0 873 V
-31 -873 R
62 0 V
-62 873 R
62 0 V
602 -611 R
0 940 V
-31 -940 R
62 0 V
-62 940 R
62 0 V
602 -637 R
0 987 V
-31 -987 R
47 0 V
-47 987 R
47 0 V
602 448 Pls
665 565 Pls
760 616 Pls
918 717 Pls
1077 796 Pls
1235 910 Pls
1393 967 Pls
1551 1043 Pls
1710 1134 Pls
1868 1202 Pls
2026 1295 Pls
2184 1367 Pls
2501 1563 Pls
2817 1696 Pls
3134 1862 Pls
3450 2013 Pls
3767 2165 Pls
4400 2554 Pls
5032 2841 Pls
5665 3115 Pls
6298 3410 Pls
6931 3736 Pls
6579 4486 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
0.00 0.00 1.00 C LCb setrgbcolor
6296 4346 M
[ [(Times-NewRoman) 140.0 0.0 true true 0 (Model Predicted Response time for LIST_QUEUES, SEND_MESSAGE, RECEIVE_MESSAGE)]
] -46.7 MRshow
LT1
0.00 0.00 1.00 C 6380 4346 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
602 448 M
63 113 V
95 0 V
158 76 V
159 93 V
158 94 V
158 94 V
158 95 V
159 93 V
158 94 V
158 95 V
158 94 V
317 188 V
316 188 V
317 188 V
316 188 V
317 188 V
633 376 V
632 377 V
633 376 V
633 377 V
633 376 V
602 448 M
31 0 V
-31 0 R
31 0 V
32 113 R
-31 0 R
62 0 V
-62 0 R
62 0 V
64 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
127 76 R
-31 0 R
62 0 V
-62 0 R
62 0 V
128 93 R
-31 0 R
62 0 V
-62 0 R
62 0 V
127 94 R
-31 0 R
62 0 V
-62 0 R
62 0 V
127 94 R
-31 0 R
62 0 V
-62 0 R
62 0 V
127 95 R
-31 0 R
62 0 V
-62 0 R
62 0 V
128 93 R
-31 0 R
62 0 V
-62 0 R
62 0 V
127 94 R
-31 0 R
62 0 V
-62 0 R
62 0 V
127 95 R
-31 0 R
62 0 V
-62 0 R
62 0 V
127 94 R
-31 0 R
62 0 V
-62 0 R
62 0 V
286 188 R
-31 0 R
62 0 V
-62 0 R
62 0 V
285 188 R
-31 0 R
62 0 V
-62 0 R
62 0 V
286 188 R
-31 0 R
62 0 V
-62 0 R
62 0 V
285 188 R
-31 0 R
62 0 V
stroke 3481 2141 M
-62 0 R
62 0 V
286 188 R
-31 0 R
62 0 V
-62 0 R
62 0 V
602 376 R
-31 0 R
62 0 V
-62 0 R
62 0 V
601 377 R
-31 0 R
62 0 V
-62 0 R
62 0 V
602 376 R
-31 0 R
62 0 V
-62 0 R
62 0 V
602 377 R
-31 0 R
62 0 V
-62 0 R
62 0 V
602 376 R
-31 0 R
47 0 V
-47 0 R
47 0 V
602 448 Crs
665 561 Crs
760 561 Crs
918 637 Crs
1077 730 Crs
1235 824 Crs
1393 918 Crs
1551 1013 Crs
1710 1106 Crs
1868 1200 Crs
2026 1295 Crs
2184 1389 Crs
2501 1577 Crs
2817 1765 Crs
3134 1953 Crs
3450 2141 Crs
3767 2329 Crs
4400 2705 Crs
5032 3082 Crs
5665 3458 Crs
6298 3835 Crs
6931 4211 Crs
6579 4346 Crs
% End plot #2
0.500 UL
LTb
LCb setrgbcolor
602 4619 N
602 448 L
6345 0 V
0 4171 V
-6345 0 V
Z stroke
1.000 UP
0.500 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-NewRoman
