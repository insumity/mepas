numberOfClientInstances=1
numberOfClientsPerInstance=20

numberOfMiddlewares=1


# testing connections takes time
testConnection="yes" # (or "yes" or "no")
copyJar="yes" # (or "yes" or "no", don't copy it in the experiments, it's the same)

# (mode) type of experiment
mode="twoWay" # can be ("oneWay", "twoWay")

# in case of two way you can define which client is going to do stuff
# can be "req", "resp" or "both"
clientType="resp"


# intialize and restore the database to the correct condition
# in order for this to be successful .pgpass should be initialized
# check database instructions txt file (will also delete messages)
initDatabase="no"
initDBClients=50
initDBQueues=50

cleanDatabase="yes" #clean the db at the end or no, can be "yes" or "no"


# amazon instances configuration"
serverMachine="ec2-54-200-65-12.us-west-2.compute.amazonaws.com"
serverPrivateIP="172.31.31.252"

clientMachine="ec2-54-200-250-151.us-west-2.compute.amazonaws.com"


# database configuration
dbMachine="ec2-54-201-18-7.us-west-2.compute.amazonaws.com"
dbPrivateIP="172.31.17.198"
dbName="message"
dbUsername="postgres"
dbPassword="321postgres"

remoteUserName="ubuntu"
privateKey="/home/monra/Desktop/mepas.pem"

# jar to execute on the instances
jarPath="/home/monra/Desktop/message.jar" # points to a runnable jar
jarName="message.jar"
experimentId="./experiments/twoWay_1resp"

# server data for the experiment
numberOfThreads=1
numberOfDbConnections=1
port=4444

# message size to be used, can be either "SMALL" or "LARGE"
messageSize="SMALL"

# following values shouldn't be zero
requestsPerSecond=-1
runningTimeInSeconds=1800

numberOfClients=1
